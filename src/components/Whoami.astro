---
import { siteMetadata } from "../siteMetadata";

// Get the base timeout value from site metadata
const timeout = siteMetadata.config.matrixEffect.timeout;
---

<div class="whoami">
    <div
        class="command-content-pair"
        data-command="whoami"
        data-delay={timeout + 1000}
    >
        <p>
            daniele@dagnelli.net:~$ <span class="typewriter"></span><span
                class="cursor">|</span
            >
        </p>
        <p class="content" style="display: none;">
            I grew up and studied in the south of Italy. Since then, many other
            things have happened. I will write about them when I get the chance.
        </p>
    </div>

    <div
        class="command-content-pair"
        data-command=""
        data-delay={timeout + 500}
        style="display: none;"
    >
        <p>
            daniele@dagnelli.net:~$ <span class="typewriter"></span><span
                class="cursor">|</span
            >
        </p>
        <p class="content" style="display: none;"></p>
    </div>

    <div id="typedCommand" style="display: none;">
        newPrompt.innerHTML = `
        <p>
            daniele@dagnelli.net:~$ <span class="typewriter"></span><span
                class="cursor blink">|</span
            >
        </p>
        <p class="content" style="display: none;"></p>
        `;
    </div>
</div>

<style>
    .whoami {
        flex: 1; /* Takes remaining horizontal space */
        padding: 1em;
        background-color: var(--background-secondary);
        border: 1px solid var(--text-color);
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
        height: 100%;
        box-sizing: border-box;
    }

    .cursor {
        display: inline-block;
        width: 10px; /* or however wide you want */
        height: 15px; /* or match your font-size */
        background-color: var(--text-color);
        margin-left: 2px; /* spacing from typed text */
        animation: blink 1s steps(2, start) infinite;
        width: auto; /* (or something else that overrides your block style) */
        height: auto;
    }

    @keyframes blink {
        0%,
        100% {
            opacity: 1;
        }
        50% {
            opacity: 0;
        }
    }

    .content {
        margin-top: 0.5em;
        
    }
</style>

<script>
    const speed = 100; // Typing speed in milliseconds
    let pairIndex = 0;

    function typeWriter(
        element: Element | null,
        text: string | null,
        callback: { (): void; (): void },
    ) {
        let index = 0;
        const cursor = element ? element.nextElementSibling : null;

        function type() {
            if (text && index < text.length) {
                if (element) {
                    element.innerHTML += text.charAt(index);
                }
                index++;
                setTimeout(type, speed);
            } else {
                if (cursor && cursor.classList.contains("cursor")) {
                    cursor.remove();
                }
                callback(); // Call the callback after typing finishes
            }
        }

        type();
    }

    function processNextPair() {
        const pairs = document.querySelectorAll(".command-content-pair");
        if (pairIndex < pairs.length) {
            const pair = pairs[pairIndex];
            const command = pair.getAttribute("data-command");
            const delay = parseInt(pair.getAttribute("data-delay") ?? "0") || 0; // Get delay, default to 0 if not specified
            const typewriterElement = pair.querySelector(".typewriter");
            const contentElement = pair.querySelector(".content");

            // Apply delay before starting the typing effect
            setTimeout(() => {
                typeWriter(typewriterElement, command, () => {
                    if (contentElement) {
                        (contentElement as HTMLElement).style.display = "block"; // Show content after typing finishes
                    }
                    pairIndex++; // Move to the next pair

                    // Reveal the next command-content pair
                    if (pairIndex < pairs.length) {
                        (pairs[pairIndex] as HTMLElement).style.display =
                            "block";
                    }

                    processNextPair(); // Process the next pair
                });
            }, delay);
        }
    }

    // Start the sequential typing process when the page loads
    window.addEventListener("load", processNextPair);

    
</script>
